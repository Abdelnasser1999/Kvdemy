<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="booking_approved" xml:space="preserve">
    <value>Lesson approved</value>
  </data>
  <data name="booking_cancelled" xml:space="preserve">
    <value>Lesson cancelled</value>
  </data>
  <data name="booking_completed" xml:space="preserve">
    <value>Lesson completed, come back again for more lessons</value>
  </data>
  <data name="booking_conflict" xml:space="preserve">
    <value>This time is already booked, please choose another time</value>
  </data>
  <data name="booking_created_success" xml:space="preserve">
    <value>Lesson created successfully</value>
  </data>
  <data name="booking_not_available" xml:space="preserve">
    <value>Booking not available at this time for this teacher</value>
  </data>
  <data name="booking_not_found" xml:space="preserve">
    <value>This lesson does not exist</value>
  </data>
  <data name="booking_updated_success" xml:space="preserve">
    <value>Lesson status updated successfully</value>
  </data>
  <data name="created_failed" xml:space="preserve">
    <value>Creation failed</value>
  </data>
  <data name="created_success" xml:space="preserve">
    <value>Creation Success</value>
  </data>
  <data name="data_failed" xml:space="preserve">
    <value>Data retrieval failed</value>
  </data>
  <data name="data_success" xml:space="preserve">
    <value>Data retrieved successfully</value>
  </data>
  <data name="delete_failed" xml:space="preserve">
    <value>Deletion failed</value>
  </data>
  <data name="delete_success" xml:space="preserve">
    <value>Deleted successfully</value>
  </data>
  <data name="duplicate_email" xml:space="preserve">
    <value>This email already exists</value>
  </data>
  <data name="duplicate_phone" xml:space="preserve">
    <value>Phone number already exists</value>
  </data>
  <data name="duplicate_username" xml:space="preserve">
    <value>Username already exists</value>
  </data>
  <data name="invalid_credentials" xml:space="preserve">
    <value>Invalid credentials</value>
  </data>
  <data name="invalid_token" xml:space="preserve">
    <value>Invalid credentials</value>
  </data>
  <data name="invalid_username" xml:space="preserve">
    <value>Invalid credentials</value>
  </data>
  <data name="item_not_found" xml:space="preserve">
    <value>Item not found</value>
  </data>
  <data name="login_success" xml:space="preserve">
    <value>Invalid credentials</value>
  </data>
  <data name="new_booking" xml:space="preserve">
    <value>You have received a new lesson request, please accept it now</value>
  </data>
  <data name="otp_success" xml:space="preserve">
    <value>Verified successfully</value>
  </data>
  <data name="otp_wrong" xml:space="preserve">
    <value>Verification code is incorrect</value>
  </data>
  <data name="question_not_found" xml:space="preserve">
    <value>Question not found</value>
  </data>
  <data name="refund_Failed" xml:space="preserve">
    <value>There was an error while refunding the amount to the account after canceling the lesson. Please contact support.</value>
  </data>
  <data name="refund_success" xml:space="preserve">
    <value>After the lesson is cancelled by the teacher, the amount will be refunded to the account within 24 hours. If the amount is not refunded, please contact support.</value>
  </data>
  <data name="teacher_unavailable" xml:space="preserve">
    <value>Teacher not available for booking</value>
  </data>
  <data name="teacher_unavailable_on_this_day" xml:space="preserve">
    <value>Teacher not available for booking on this day, please choose another day</value>
  </data>
  <data name="title_booking_approved" xml:space="preserve">
    <value>Lesson approval</value>
  </data>
  <data name="title_booking_cancelled" xml:space="preserve">
    <value>Lesson cancellation</value>
  </data>
  <data name="title_booking_completed" xml:space="preserve">
    <value>Lesson completion</value>
  </data>
  <data name="title_booking_conflict" xml:space="preserve">
    <value>Time slot booked</value>
  </data>
  <data name="title_booking_created_success" xml:space="preserve">
    <value>Lesson creation</value>
  </data>
  <data name="title_booking_not_available" xml:space="preserve">
    <value>Time slot not available</value>
  </data>
  <data name="title_booking_not_found" xml:space="preserve">
    <value>Lesson not found</value>
  </data>
  <data name="title_booking_updated_success" xml:space="preserve">
    <value>Lesson status</value>
  </data>
  <data name="title_new_booking" xml:space="preserve">
    <value>New lesson request</value>
  </data>
  <data name="title_teacher_unavailable" xml:space="preserve">
    <value>Not available</value>
  </data>
  <data name="title_teacher_unavailable_on_this_day" xml:space="preserve">
    <value>Not available</value>
  </data>
  <data name="updated_failed" xml:space="preserve">
    <value>Modification failed</value>
  </data>
  <data name="updated_success" xml:space="preserve">
    <value>Modification succeeded</value>
  </data>
  <data name="user_delete_failed" xml:space="preserve">
    <value>User deletion failed</value>
  </data>
  <data name="user_delete_success" xml:space="preserve">
    <value>User deleted successfully</value>
  </data>
  <data name="user_not_found" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="user_updated_failed" xml:space="preserve">
    <value>User modification failed</value>
  </data>
  <data name="user_updated_success" xml:space="preserve">
    <value>User modified successfully</value>
  </data>
</root>